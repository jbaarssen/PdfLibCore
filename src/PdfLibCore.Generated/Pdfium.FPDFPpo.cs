// Built from precompiled binaries at https://github.com/bblanchon/pdfium-binaries/releases/tag/chromium/5772
// Github release api https://api.github.com/repos/bblanchon/pdfium-binaries/releases/102934879
// PDFium version v115.0.5772.0 chromium/5772 [master]
// Built on: Wed, 17 May 2023 13:34:04 GMT

// ReSharper disable all
#pragma warning disable CS8500 // This takes the address of, gets the size of, or declares a pointer to a managed type

// ----------------------------------------------------------------------------
// <auto-generated>
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
// </auto-generated>
// ----------------------------------------------------------------------------
using System;
using System.Runtime.InteropServices;
using System.Security;
using __CallingConvention = global::System.Runtime.InteropServices.CallingConvention;
using __IntPtr = global::System.IntPtr;

#pragma warning disable CS0109 // Member does not hide an inherited member; new keyword is not required

namespace PdfLibCore.Generated
{
    public static unsafe partial class Pdfium
    {
        public partial struct __Internal
        {
            [SuppressUnmanagedCodeSecurity, DllImport("Pdfium", EntryPoint = "FPDF_ImportPagesByIndex", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern global::PdfLibCore.Types.FPDF_BOOL FPDF_ImportPagesByIndex(__IntPtr dest_doc, __IntPtr src_doc, int* page_indices, uint length, int index);

            [SuppressUnmanagedCodeSecurity, DllImport("Pdfium", EntryPoint = "FPDF_ImportPages", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern global::PdfLibCore.Types.FPDF_BOOL FPDF_ImportPages(__IntPtr dest_doc, __IntPtr src_doc, string pagerange, int index);

            [SuppressUnmanagedCodeSecurity, DllImport("Pdfium", EntryPoint = "FPDF_ImportNPagesToOne", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr FPDF_ImportNPagesToOne(__IntPtr src_doc, float output_width, float output_height, ulong num_pages_on_x_axis, ulong num_pages_on_y_axis);

            [SuppressUnmanagedCodeSecurity, DllImport("Pdfium", EntryPoint = "FPDF_NewXObjectFromPage", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr FPDF_NewXObjectFromPage(__IntPtr dest_doc, __IntPtr src_doc, int src_page_index);

            [SuppressUnmanagedCodeSecurity, DllImport("Pdfium", EntryPoint = "FPDF_CloseXObject", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void FPDF_CloseXObject(__IntPtr xobject);

            [SuppressUnmanagedCodeSecurity, DllImport("Pdfium", EntryPoint = "FPDF_NewFormObjectFromXObject", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr FPDF_NewFormObjectFromXObject(__IntPtr xobject);

            [SuppressUnmanagedCodeSecurity, DllImport("Pdfium", EntryPoint = "FPDF_CopyViewerPreferences", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern global::PdfLibCore.Types.FPDF_BOOL FPDF_CopyViewerPreferences(__IntPtr dest_doc, __IntPtr src_doc);
        }


        public static global::PdfLibCore.Types.FPDF_BOOL FPDF_ImportPagesByIndex(global::PdfLibCore.Generated.FPDF_Document dest_doc, global::PdfLibCore.Generated.FPDF_Document src_doc, ref int page_indices, uint length, int index)
        {
            var __arg0 = dest_doc is null ? __IntPtr.Zero : dest_doc.__Instance;
            var __arg1 = src_doc is null ? __IntPtr.Zero : src_doc.__Instance;
            fixed (int* __page_indices2 = &page_indices)
            {
                var __arg2 = __page_indices2;
                var ___ret = __Internal.FPDF_ImportPagesByIndex(__arg0, __arg1, __arg2, length, index);
                return ___ret;
            }
        }


        public static global::PdfLibCore.Types.FPDF_BOOL FPDF_ImportPages(global::PdfLibCore.Generated.FPDF_Document dest_doc, global::PdfLibCore.Generated.FPDF_Document src_doc, string pagerange, int index)
        {
            var __arg0 = dest_doc is null ? __IntPtr.Zero : dest_doc.__Instance;
            var __arg1 = src_doc is null ? __IntPtr.Zero : src_doc.__Instance;
            var ___ret = __Internal.FPDF_ImportPages(__arg0, __arg1, pagerange, index);
            return ___ret;
        }

        /// <remarks>number of pages per page = num_pages_on_x_axis * num_pages_on_y_axis</remarks>
        /// <returns>A handle to the created document, or NULL on failure.</returns>
        public static global::PdfLibCore.Generated.FPDF_Document FPDF_ImportNPagesToOne(global::PdfLibCore.Generated.FPDF_Document src_doc, float output_width, float output_height, ulong num_pages_on_x_axis, ulong num_pages_on_y_axis)
        {
            var __arg0 = src_doc is null ? __IntPtr.Zero : src_doc.__Instance;
            var ___ret = __Internal.FPDF_ImportNPagesToOne(__arg0, output_width, output_height, num_pages_on_x_axis, num_pages_on_y_axis);
            var __result0 = global::PdfLibCore.Generated.FPDF_Document.__CreateInstance(___ret, false);
            return __result0;
        }


        public static global::PdfLibCore.Generated.FPDF_Xobject FPDF_NewXObjectFromPage(global::PdfLibCore.Generated.FPDF_Document dest_doc, global::PdfLibCore.Generated.FPDF_Document src_doc, int src_page_index)
        {
            var __arg0 = dest_doc is null ? __IntPtr.Zero : dest_doc.__Instance;
            var __arg1 = src_doc is null ? __IntPtr.Zero : src_doc.__Instance;
            var ___ret = __Internal.FPDF_NewXObjectFromPage(__arg0, __arg1, src_page_index);
            var __result0 = global::PdfLibCore.Generated.FPDF_Xobject.__CreateInstance(___ret, false);
            return __result0;
        }


        public static void FPDF_CloseXObject(global::PdfLibCore.Generated.FPDF_Xobject xobject)
        {
            var __arg0 = xobject is null ? __IntPtr.Zero : xobject.__Instance;
            __Internal.FPDF_CloseXObject(__arg0);
        }


        public static global::PdfLibCore.Generated.FPDF_Pageobject FPDF_NewFormObjectFromXObject(global::PdfLibCore.Generated.FPDF_Xobject xobject)
        {
            var __arg0 = xobject is null ? __IntPtr.Zero : xobject.__Instance;
            var ___ret = __Internal.FPDF_NewFormObjectFromXObject(__arg0);
            var __result0 = global::PdfLibCore.Generated.FPDF_Pageobject.__CreateInstance(___ret, false);
            return __result0;
        }


        public static global::PdfLibCore.Types.FPDF_BOOL FPDF_CopyViewerPreferences(global::PdfLibCore.Generated.FPDF_Document dest_doc, global::PdfLibCore.Generated.FPDF_Document src_doc)
        {
            var __arg0 = dest_doc is null ? __IntPtr.Zero : dest_doc.__Instance;
            var __arg1 = src_doc is null ? __IntPtr.Zero : src_doc.__Instance;
            var ___ret = __Internal.FPDF_CopyViewerPreferences(__arg0, __arg1);
            return ___ret;
        }
    }
}
