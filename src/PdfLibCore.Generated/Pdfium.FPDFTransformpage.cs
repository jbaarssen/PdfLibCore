// Built from precompiled binaries at https://github.com/bblanchon/pdfium-binaries/releases/tag/chromium/5772
// Github release api https://api.github.com/repos/bblanchon/pdfium-binaries/releases/102934879
// PDFium version v115.0.5772.0 chromium/5772 [master]
// Built on: Wed, 17 May 2023 07:45:21 GMT

// ReSharper disable all
#pragma warning disable CS8500 // This takes the address of, gets the size of, or declares a pointer to a managed type

// ----------------------------------------------------------------------------
// <auto-generated>
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
// </auto-generated>
// ----------------------------------------------------------------------------
using System;
using System.Runtime.InteropServices;
using System.Security;
using __CallingConvention = global::System.Runtime.InteropServices.CallingConvention;
using __IntPtr = global::System.IntPtr;

#pragma warning disable CS0109 // Member does not hide an inherited member; new keyword is not required

namespace PdfLibCore.Generated
{
    public static unsafe partial class Pdfium
    {
        public partial struct __Internal
        {
            [SuppressUnmanagedCodeSecurity, DllImport("Pdfium", EntryPoint = "FPDFPage_SetMediaBox", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void FPDFPage_SetMediaBox(__IntPtr page, float left, float bottom, float right, float top);

            [SuppressUnmanagedCodeSecurity, DllImport("Pdfium", EntryPoint = "FPDFPage_SetCropBox", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void FPDFPage_SetCropBox(__IntPtr page, float left, float bottom, float right, float top);

            [SuppressUnmanagedCodeSecurity, DllImport("Pdfium", EntryPoint = "FPDFPage_SetBleedBox", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void FPDFPage_SetBleedBox(__IntPtr page, float left, float bottom, float right, float top);

            [SuppressUnmanagedCodeSecurity, DllImport("Pdfium", EntryPoint = "FPDFPage_SetTrimBox", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void FPDFPage_SetTrimBox(__IntPtr page, float left, float bottom, float right, float top);

            [SuppressUnmanagedCodeSecurity, DllImport("Pdfium", EntryPoint = "FPDFPage_SetArtBox", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void FPDFPage_SetArtBox(__IntPtr page, float left, float bottom, float right, float top);

            [SuppressUnmanagedCodeSecurity, DllImport("Pdfium", EntryPoint = "FPDFPage_GetMediaBox", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern global::PdfLibCore.Types.FPDF_BOOL FPDFPage_GetMediaBox(__IntPtr page, float* left, float* bottom, float* right, float* top);

            [SuppressUnmanagedCodeSecurity, DllImport("Pdfium", EntryPoint = "FPDFPage_GetCropBox", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern global::PdfLibCore.Types.FPDF_BOOL FPDFPage_GetCropBox(__IntPtr page, float* left, float* bottom, float* right, float* top);

            [SuppressUnmanagedCodeSecurity, DllImport("Pdfium", EntryPoint = "FPDFPage_GetBleedBox", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern global::PdfLibCore.Types.FPDF_BOOL FPDFPage_GetBleedBox(__IntPtr page, float* left, float* bottom, float* right, float* top);

            [SuppressUnmanagedCodeSecurity, DllImport("Pdfium", EntryPoint = "FPDFPage_GetTrimBox", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern global::PdfLibCore.Types.FPDF_BOOL FPDFPage_GetTrimBox(__IntPtr page, float* left, float* bottom, float* right, float* top);

            [SuppressUnmanagedCodeSecurity, DllImport("Pdfium", EntryPoint = "FPDFPage_GetArtBox", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern global::PdfLibCore.Types.FPDF_BOOL FPDFPage_GetArtBox(__IntPtr page, float* left, float* bottom, float* right, float* top);

            [SuppressUnmanagedCodeSecurity, DllImport("Pdfium", EntryPoint = "FPDFPage_TransFormWithClip", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern global::PdfLibCore.Types.FPDF_BOOL FPDFPage_TransFormWithClip(__IntPtr page, __IntPtr matrix, __IntPtr clipRect);

            [SuppressUnmanagedCodeSecurity, DllImport("Pdfium", EntryPoint = "FPDFPageObj_TransformClipPath", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void FPDFPageObj_TransformClipPath(__IntPtr page_object, double a, double b, double c, double d, double e, double f);

            [SuppressUnmanagedCodeSecurity, DllImport("Pdfium", EntryPoint = "FPDFPageObj_GetClipPath", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr FPDFPageObj_GetClipPath(__IntPtr page_object);

            [SuppressUnmanagedCodeSecurity, DllImport("Pdfium", EntryPoint = "FPDFClipPath_CountPaths", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int FPDFClipPath_CountPaths(__IntPtr clip_path);

            [SuppressUnmanagedCodeSecurity, DllImport("Pdfium", EntryPoint = "FPDFClipPath_CountPathSegments", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int FPDFClipPath_CountPathSegments(__IntPtr clip_path, int path_index);

            [SuppressUnmanagedCodeSecurity, DllImport("Pdfium", EntryPoint = "FPDFClipPath_GetPathSegment", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr FPDFClipPath_GetPathSegment(__IntPtr clip_path, int path_index, int segment_index);

            [SuppressUnmanagedCodeSecurity, DllImport("Pdfium", EntryPoint = "FPDF_CreateClipPath", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr FPDF_CreateClipPath(float left, float bottom, float right, float top);

            [SuppressUnmanagedCodeSecurity, DllImport("Pdfium", EntryPoint = "FPDF_DestroyClipPath", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void FPDF_DestroyClipPath(__IntPtr clipPath);

            [SuppressUnmanagedCodeSecurity, DllImport("Pdfium", EntryPoint = "FPDFPage_InsertClipPath", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void FPDFPage_InsertClipPath(__IntPtr page, __IntPtr clipPath);
        }


        public static void FPDFPage_SetMediaBox(global::PdfLibCore.Generated.FPDF_Page page, float left, float bottom, float right, float top)
        {
            var __arg0 = page is null ? __IntPtr.Zero : page.__Instance;
            __Internal.FPDFPage_SetMediaBox(__arg0, left, bottom, right, top);
        }


        public static void FPDFPage_SetCropBox(global::PdfLibCore.Generated.FPDF_Page page, float left, float bottom, float right, float top)
        {
            var __arg0 = page is null ? __IntPtr.Zero : page.__Instance;
            __Internal.FPDFPage_SetCropBox(__arg0, left, bottom, right, top);
        }


        public static void FPDFPage_SetBleedBox(global::PdfLibCore.Generated.FPDF_Page page, float left, float bottom, float right, float top)
        {
            var __arg0 = page is null ? __IntPtr.Zero : page.__Instance;
            __Internal.FPDFPage_SetBleedBox(__arg0, left, bottom, right, top);
        }


        public static void FPDFPage_SetTrimBox(global::PdfLibCore.Generated.FPDF_Page page, float left, float bottom, float right, float top)
        {
            var __arg0 = page is null ? __IntPtr.Zero : page.__Instance;
            __Internal.FPDFPage_SetTrimBox(__arg0, left, bottom, right, top);
        }


        public static void FPDFPage_SetArtBox(global::PdfLibCore.Generated.FPDF_Page page, float left, float bottom, float right, float top)
        {
            var __arg0 = page is null ? __IntPtr.Zero : page.__Instance;
            __Internal.FPDFPage_SetArtBox(__arg0, left, bottom, right, top);
        }


        public static global::PdfLibCore.Types.FPDF_BOOL FPDFPage_GetMediaBox(global::PdfLibCore.Generated.FPDF_Page page, ref float left, ref float bottom, ref float right, ref float top)
        {
            var __arg0 = page is null ? __IntPtr.Zero : page.__Instance;
            fixed (float* __left1 = &left)
            {
                var __arg1 = __left1;
                fixed (float* __bottom2 = &bottom)
                {
                    var __arg2 = __bottom2;
                    fixed (float* __right3 = &right)
                    {
                        var __arg3 = __right3;
                        fixed (float* __top4 = &top)
                        {
                            var __arg4 = __top4;
                            var ___ret = __Internal.FPDFPage_GetMediaBox(__arg0, __arg1, __arg2, __arg3, __arg4);
                            return ___ret;
                        }
                    }
                }
            }
        }


        public static global::PdfLibCore.Types.FPDF_BOOL FPDFPage_GetCropBox(global::PdfLibCore.Generated.FPDF_Page page, ref float left, ref float bottom, ref float right, ref float top)
        {
            var __arg0 = page is null ? __IntPtr.Zero : page.__Instance;
            fixed (float* __left1 = &left)
            {
                var __arg1 = __left1;
                fixed (float* __bottom2 = &bottom)
                {
                    var __arg2 = __bottom2;
                    fixed (float* __right3 = &right)
                    {
                        var __arg3 = __right3;
                        fixed (float* __top4 = &top)
                        {
                            var __arg4 = __top4;
                            var ___ret = __Internal.FPDFPage_GetCropBox(__arg0, __arg1, __arg2, __arg3, __arg4);
                            return ___ret;
                        }
                    }
                }
            }
        }


        public static global::PdfLibCore.Types.FPDF_BOOL FPDFPage_GetBleedBox(global::PdfLibCore.Generated.FPDF_Page page, ref float left, ref float bottom, ref float right, ref float top)
        {
            var __arg0 = page is null ? __IntPtr.Zero : page.__Instance;
            fixed (float* __left1 = &left)
            {
                var __arg1 = __left1;
                fixed (float* __bottom2 = &bottom)
                {
                    var __arg2 = __bottom2;
                    fixed (float* __right3 = &right)
                    {
                        var __arg3 = __right3;
                        fixed (float* __top4 = &top)
                        {
                            var __arg4 = __top4;
                            var ___ret = __Internal.FPDFPage_GetBleedBox(__arg0, __arg1, __arg2, __arg3, __arg4);
                            return ___ret;
                        }
                    }
                }
            }
        }


        public static global::PdfLibCore.Types.FPDF_BOOL FPDFPage_GetTrimBox(global::PdfLibCore.Generated.FPDF_Page page, ref float left, ref float bottom, ref float right, ref float top)
        {
            var __arg0 = page is null ? __IntPtr.Zero : page.__Instance;
            fixed (float* __left1 = &left)
            {
                var __arg1 = __left1;
                fixed (float* __bottom2 = &bottom)
                {
                    var __arg2 = __bottom2;
                    fixed (float* __right3 = &right)
                    {
                        var __arg3 = __right3;
                        fixed (float* __top4 = &top)
                        {
                            var __arg4 = __top4;
                            var ___ret = __Internal.FPDFPage_GetTrimBox(__arg0, __arg1, __arg2, __arg3, __arg4);
                            return ___ret;
                        }
                    }
                }
            }
        }


        public static global::PdfLibCore.Types.FPDF_BOOL FPDFPage_GetArtBox(global::PdfLibCore.Generated.FPDF_Page page, ref float left, ref float bottom, ref float right, ref float top)
        {
            var __arg0 = page is null ? __IntPtr.Zero : page.__Instance;
            fixed (float* __left1 = &left)
            {
                var __arg1 = __left1;
                fixed (float* __bottom2 = &bottom)
                {
                    var __arg2 = __bottom2;
                    fixed (float* __right3 = &right)
                    {
                        var __arg3 = __right3;
                        fixed (float* __top4 = &top)
                        {
                            var __arg4 = __top4;
                            var ___ret = __Internal.FPDFPage_GetArtBox(__arg0, __arg1, __arg2, __arg3, __arg4);
                            return ___ret;
                        }
                    }
                }
            }
        }


        public static global::PdfLibCore.Types.FPDF_BOOL FPDFPage_TransFormWithClip(global::PdfLibCore.Generated.FPDF_Page page, global::PdfLibCore.Generated.FS_MATRIX_ matrix, global::PdfLibCore.Generated.FS_RECTF_ clipRect)
        {
            var __arg0 = page is null ? __IntPtr.Zero : page.__Instance;
            var __arg1 = matrix is null ? __IntPtr.Zero : matrix.__Instance;
            var __arg2 = clipRect is null ? __IntPtr.Zero : clipRect.__Instance;
            var ___ret = __Internal.FPDFPage_TransFormWithClip(__arg0, __arg1, __arg2);
            return ___ret;
        }


        public static void FPDFPageObj_TransformClipPath(global::PdfLibCore.Generated.FPDF_Pageobject page_object, double a, double b, double c, double d, double e, double f)
        {
            var __arg0 = page_object is null ? __IntPtr.Zero : page_object.__Instance;
            __Internal.FPDFPageObj_TransformClipPath(__arg0, a, b, c, d, e, f);
        }


        public static global::PdfLibCore.Generated.FPDF_Clippath FPDFPageObj_GetClipPath(global::PdfLibCore.Generated.FPDF_Pageobject page_object)
        {
            var __arg0 = page_object is null ? __IntPtr.Zero : page_object.__Instance;
            var ___ret = __Internal.FPDFPageObj_GetClipPath(__arg0);
            var __result0 = global::PdfLibCore.Generated.FPDF_Clippath.__CreateInstance(___ret, false);
            return __result0;
        }


        public static int FPDFClipPath_CountPaths(global::PdfLibCore.Generated.FPDF_Clippath clip_path)
        {
            var __arg0 = clip_path is null ? __IntPtr.Zero : clip_path.__Instance;
            var ___ret = __Internal.FPDFClipPath_CountPaths(__arg0);
            return ___ret;
        }


        public static int FPDFClipPath_CountPathSegments(global::PdfLibCore.Generated.FPDF_Clippath clip_path, int path_index)
        {
            var __arg0 = clip_path is null ? __IntPtr.Zero : clip_path.__Instance;
            var ___ret = __Internal.FPDFClipPath_CountPathSegments(__arg0, path_index);
            return ___ret;
        }


        public static global::PdfLibCore.Generated.FpdfPathsegmentT FPDFClipPath_GetPathSegment(global::PdfLibCore.Generated.FPDF_Clippath clip_path, int path_index, int segment_index)
        {
            var __arg0 = clip_path is null ? __IntPtr.Zero : clip_path.__Instance;
            var ___ret = __Internal.FPDFClipPath_GetPathSegment(__arg0, path_index, segment_index);
            var __result0 = global::PdfLibCore.Generated.FpdfPathsegmentT.__CreateInstance(___ret, false);
            return __result0;
        }


        public static global::PdfLibCore.Generated.FPDF_Clippath FPDF_CreateClipPath(float left, float bottom, float right, float top)
        {
            var ___ret = __Internal.FPDF_CreateClipPath(left, bottom, right, top);
            var __result0 = global::PdfLibCore.Generated.FPDF_Clippath.__CreateInstance(___ret, false);
            return __result0;
        }


        public static void FPDF_DestroyClipPath(global::PdfLibCore.Generated.FPDF_Clippath clipPath)
        {
            var __arg0 = clipPath is null ? __IntPtr.Zero : clipPath.__Instance;
            __Internal.FPDF_DestroyClipPath(__arg0);
        }


        public static void FPDFPage_InsertClipPath(global::PdfLibCore.Generated.FPDF_Page page, global::PdfLibCore.Generated.FPDF_Clippath clipPath)
        {
            var __arg0 = page is null ? __IntPtr.Zero : page.__Instance;
            var __arg1 = clipPath is null ? __IntPtr.Zero : clipPath.__Instance;
            __Internal.FPDFPage_InsertClipPath(__arg0, __arg1);
        }
    }

    namespace Delegates
    {
        [SuppressUnmanagedCodeSecurity, UnmanagedFunctionPointer(__CallingConvention.Cdecl)]
        public unsafe delegate int Func_int___IntPtr_uint_bytePtr_uint(__IntPtr param, uint position, byte* pBuf, uint size);

        [SuppressUnmanagedCodeSecurity, UnmanagedFunctionPointer(__CallingConvention.Cdecl)]
        public unsafe delegate void Action___IntPtr(__IntPtr clientData);

        [SuppressUnmanagedCodeSecurity, UnmanagedFunctionPointer(__CallingConvention.Cdecl)]
        public unsafe delegate long Func_long___IntPtr(__IntPtr clientData);

        [SuppressUnmanagedCodeSecurity, UnmanagedFunctionPointer(__CallingConvention.Cdecl)]
        public unsafe delegate int Func_int___IntPtr_long___IntPtr_long(__IntPtr clientData, long offset, __IntPtr buffer, long size);

        [SuppressUnmanagedCodeSecurity, UnmanagedFunctionPointer(__CallingConvention.Cdecl)]
        public unsafe delegate int Func_int___IntPtr(__IntPtr clientData);

        [SuppressUnmanagedCodeSecurity, UnmanagedFunctionPointer(__CallingConvention.Cdecl)]
        public unsafe delegate int Func_int___IntPtr_long(__IntPtr clientData, long size);

        [SuppressUnmanagedCodeSecurity, UnmanagedFunctionPointer(__CallingConvention.Cdecl)]
        public unsafe delegate int Func_int___IntPtr_string_string_int_int(__IntPtr pThis, string Msg, string Title, int Type, int Icon);

        [SuppressUnmanagedCodeSecurity, UnmanagedFunctionPointer(__CallingConvention.Cdecl)]
        public unsafe delegate void Action___IntPtr_int(__IntPtr pThis, int nType);

        [SuppressUnmanagedCodeSecurity, UnmanagedFunctionPointer(__CallingConvention.Cdecl)]
        public unsafe delegate int Func_int___IntPtr_string_string_string_string_PdfLibCore_Types_FPDF_BOOL___IntPtr_int(__IntPtr pThis, string Question, string Title, string Default, string cLabel, global::PdfLibCore.Types.FPDF_BOOL bPassword, __IntPtr response, int length);

        [SuppressUnmanagedCodeSecurity, UnmanagedFunctionPointer(__CallingConvention.Cdecl)]
        public unsafe delegate int Func_int___IntPtr___IntPtr_int(__IntPtr pThis, __IntPtr filePath, int length);

        [SuppressUnmanagedCodeSecurity, UnmanagedFunctionPointer(__CallingConvention.Cdecl)]
        public unsafe delegate void Action___IntPtr___IntPtr_int_PdfLibCore_Types_FPDF_BOOL_string_string_string_string_string(__IntPtr pThis, __IntPtr mailData, int length, global::PdfLibCore.Types.FPDF_BOOL bUI, string To, string Subject, string CC, string BCC, string Msg);

        [SuppressUnmanagedCodeSecurity, UnmanagedFunctionPointer(__CallingConvention.Cdecl)]
        public unsafe delegate void Action___IntPtr_PdfLibCore_Types_FPDF_BOOL_int_int_PdfLibCore_Types_FPDF_BOOL_PdfLibCore_Types_FPDF_BOOL_PdfLibCore_Types_FPDF_BOOL_PdfLibCore_Types_FPDF_BOOL_PdfLibCore_Types_FPDF_BOOL(__IntPtr pThis, global::PdfLibCore.Types.FPDF_BOOL bUI, int nStart, int nEnd, global::PdfLibCore.Types.FPDF_BOOL bSilent, global::PdfLibCore.Types.FPDF_BOOL bShrinkToFit, global::PdfLibCore.Types.FPDF_BOOL bPrintAsImage, global::PdfLibCore.Types.FPDF_BOOL bReverse, global::PdfLibCore.Types.FPDF_BOOL bAnnotations);

        [SuppressUnmanagedCodeSecurity, UnmanagedFunctionPointer(__CallingConvention.Cdecl)]
        public unsafe delegate void Action___IntPtr___IntPtr_int_string(__IntPtr pThis, __IntPtr formData, int length, string URL);

        [SuppressUnmanagedCodeSecurity, UnmanagedFunctionPointer(__CallingConvention.Cdecl)]
        public unsafe delegate void Action___IntPtr___IntPtr_double_double_double_double(__IntPtr pThis, __IntPtr page, double left, double top, double right, double bottom);

        [SuppressUnmanagedCodeSecurity, UnmanagedFunctionPointer(__CallingConvention.Cdecl)]
        public unsafe delegate int Func_int___IntPtr_int_PdfLibCore_Generated_TimerCallback(__IntPtr pThis, int uElapse, global::PdfLibCore.Generated.TimerCallback lpTimerFunc);

        [SuppressUnmanagedCodeSecurity, UnmanagedFunctionPointer(__CallingConvention.Cdecl)]
        public unsafe delegate global::PdfLibCore.Generated.FPDF_SYSTEMTIME.__Internal Func_PdfLibCore_Generated__FPDF_SYSTEMTIME___Internal___IntPtr(__IntPtr pThis);

        [SuppressUnmanagedCodeSecurity, UnmanagedFunctionPointer(__CallingConvention.Cdecl)]
        public unsafe delegate __IntPtr Func___IntPtr___IntPtr___IntPtr_int(__IntPtr pThis, __IntPtr document, int nPageIndex);

        [SuppressUnmanagedCodeSecurity, UnmanagedFunctionPointer(__CallingConvention.Cdecl)]
        public unsafe delegate __IntPtr Func___IntPtr___IntPtr___IntPtr(__IntPtr pThis, __IntPtr document);

        [SuppressUnmanagedCodeSecurity, UnmanagedFunctionPointer(__CallingConvention.Cdecl)]
        public unsafe delegate int Func_int___IntPtr___IntPtr(__IntPtr pThis, __IntPtr page);

        [SuppressUnmanagedCodeSecurity, UnmanagedFunctionPointer(__CallingConvention.Cdecl)]
        public unsafe delegate void Action___IntPtr_string(__IntPtr pThis, string namedAction);

        [SuppressUnmanagedCodeSecurity, UnmanagedFunctionPointer(__CallingConvention.Cdecl)]
        public unsafe delegate void Action___IntPtr_string_long_PdfLibCore_Types_FPDF_BOOL(__IntPtr pThis, string value, long valueLen, global::PdfLibCore.Types.FPDF_BOOL is_focus);

        [SuppressUnmanagedCodeSecurity, UnmanagedFunctionPointer(__CallingConvention.Cdecl)]
        public unsafe delegate void Action___IntPtr_int_int_floatPtr_int(__IntPtr pThis, int nPageIndex, int zoomMode, float* fPosArray, int sizeofArray);

        [SuppressUnmanagedCodeSecurity, UnmanagedFunctionPointer(__CallingConvention.Cdecl)]
        public unsafe delegate void Action___IntPtr___IntPtr_PdfLibCore_Types_FPDF_BOOL_double_double_double_double(__IntPtr pThis, __IntPtr page, global::PdfLibCore.Types.FPDF_BOOL bVisible, double left, double top, double right, double bottom);

        [SuppressUnmanagedCodeSecurity, UnmanagedFunctionPointer(__CallingConvention.Cdecl)]
        public unsafe delegate void Action___IntPtr___IntPtr_int(__IntPtr pThis, __IntPtr document, int iCurPage);

        [SuppressUnmanagedCodeSecurity, UnmanagedFunctionPointer(__CallingConvention.Cdecl)]
        public unsafe delegate void Action___IntPtr___IntPtr_string(__IntPtr pThis, __IntPtr document, string wsURL);

        [SuppressUnmanagedCodeSecurity, UnmanagedFunctionPointer(__CallingConvention.Cdecl)]
        public unsafe delegate void Action___IntPtr___IntPtr_doublePtr_doublePtr_doublePtr_doublePtr(__IntPtr pThis, __IntPtr page, double* left, double* top, double* right, double* bottom);

        [SuppressUnmanagedCodeSecurity, UnmanagedFunctionPointer(__CallingConvention.Cdecl)]
        public unsafe delegate void Action___IntPtr_int_long(__IntPtr pThis, int page_count, long event_type);

        [SuppressUnmanagedCodeSecurity, UnmanagedFunctionPointer(__CallingConvention.Cdecl)]
        public unsafe delegate global::PdfLibCore.Types.FPDF_BOOL Func_PdfLibCore_Types_FPDF_BOOL___IntPtr___IntPtr___IntPtr_int_float_float(__IntPtr pThis, __IntPtr page, __IntPtr hWidget, int menuFlag, float x, float y);

        [SuppressUnmanagedCodeSecurity, UnmanagedFunctionPointer(__CallingConvention.Cdecl)]
        public unsafe delegate __IntPtr Func___IntPtr___IntPtr_int_string_string8(__IntPtr pThis, int fileFlag, string wsURL, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string mode);

        [SuppressUnmanagedCodeSecurity, UnmanagedFunctionPointer(__CallingConvention.Cdecl)]
        public unsafe delegate void Action___IntPtr___IntPtr_string_string_string_string_string(__IntPtr pThis, __IntPtr fileHandler, string pTo, string pSubject, string pCC, string pBcc, string pMsg);

        [SuppressUnmanagedCodeSecurity, UnmanagedFunctionPointer(__CallingConvention.Cdecl)]
        public unsafe delegate __IntPtr Func___IntPtr___IntPtr_string(__IntPtr pThis, string URL);

        [SuppressUnmanagedCodeSecurity, UnmanagedFunctionPointer(__CallingConvention.Cdecl)]
        public unsafe delegate global::PdfLibCore.Types.FPDF_BOOL Func_PdfLibCore_Types_FPDF_BOOL___IntPtr_string_string_string_string_string___IntPtr(__IntPtr pThis, string wsURL, string wsData, string wsContentType, string wsEncode, string wsHeader, __IntPtr response);

        [SuppressUnmanagedCodeSecurity, UnmanagedFunctionPointer(__CallingConvention.Cdecl)]
        public unsafe delegate global::PdfLibCore.Types.FPDF_BOOL Func_PdfLibCore_Types_FPDF_BOOL___IntPtr_string_string_string(__IntPtr pThis, string wsURL, string wsData, string wsEncode);

        [SuppressUnmanagedCodeSecurity, UnmanagedFunctionPointer(__CallingConvention.Cdecl)]
        public unsafe delegate void Action___IntPtr_string_int(__IntPtr param, string uri, int modifiers);

        [SuppressUnmanagedCodeSecurity, UnmanagedFunctionPointer(__CallingConvention.Cdecl)]
        public unsafe delegate global::PdfLibCore.Types.FPDF_BOOL Func_PdfLibCore_Types_FPDF_BOOL___IntPtr_ulong_ulong(__IntPtr pThis, ulong offset, ulong size);

        [SuppressUnmanagedCodeSecurity, UnmanagedFunctionPointer(__CallingConvention.Cdecl)]
        public unsafe delegate void Action___IntPtr_ulong_ulong(__IntPtr pThis, ulong offset, ulong size);

        [SuppressUnmanagedCodeSecurity, UnmanagedFunctionPointer(__CallingConvention.Cdecl)]
        public unsafe delegate long Func_long();

        [SuppressUnmanagedCodeSecurity, UnmanagedFunctionPointer(__CallingConvention.Cdecl)]
        public unsafe delegate global::PdfLibCore.Types.FPDF_BOOL Func_PdfLibCore_Types_FPDF_BOOL___IntPtr(__IntPtr pThis);

        [SuppressUnmanagedCodeSecurity, UnmanagedFunctionPointer(__CallingConvention.Cdecl)]
        public unsafe delegate int Func_int___IntPtr___IntPtr_uint(__IntPtr pThis, __IntPtr pData, uint size);

        [SuppressUnmanagedCodeSecurity, UnmanagedFunctionPointer(__CallingConvention.Cdecl)]
        public unsafe delegate void Action___IntPtr___IntPtr(__IntPtr pThis, __IntPtr pMapper);

        [SuppressUnmanagedCodeSecurity, UnmanagedFunctionPointer(__CallingConvention.Cdecl)]
        public unsafe delegate __IntPtr Func___IntPtr___IntPtr_int_PdfLibCore_Types_FPDF_BOOL_int_int_string8_PdfLibCore_Types_FPDF_BOOLPtr(__IntPtr pThis, int weight, global::PdfLibCore.Types.FPDF_BOOL bItalic, int charset, int pitch_family, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string face, global::PdfLibCore.Types.FPDF_BOOL* bExact);

        [SuppressUnmanagedCodeSecurity, UnmanagedFunctionPointer(__CallingConvention.Cdecl)]
        public unsafe delegate __IntPtr Func___IntPtr___IntPtr_string8(__IntPtr pThis, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string face);

        [SuppressUnmanagedCodeSecurity, UnmanagedFunctionPointer(__CallingConvention.Cdecl)]
        public unsafe delegate uint Func_uint___IntPtr___IntPtr_uint_bytePtr_uint(__IntPtr pThis, __IntPtr hFont, uint table, byte* buffer, uint buf_size);

        [SuppressUnmanagedCodeSecurity, UnmanagedFunctionPointer(__CallingConvention.Cdecl)]
        public unsafe delegate uint Func_uint___IntPtr___IntPtr_sbytePtr_uint(__IntPtr pThis, __IntPtr hFont, sbyte* buffer, uint buf_size);
    }
}
