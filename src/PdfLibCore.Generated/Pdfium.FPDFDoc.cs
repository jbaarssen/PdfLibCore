// Built from precompiled binaries at https://github.com/bblanchon/pdfium-binaries/releases/tag/chromium/5772
// Github release api https://api.github.com/repos/bblanchon/pdfium-binaries/releases/102934879
// PDFium version v115.0.5772.0 chromium/5772 [master]
// Built on: Wed, 17 May 2023 14:53:09 GMT

// ReSharper disable all
#pragma warning disable CS8500 // This takes the address of, gets the size of, or declares a pointer to a managed type

// ----------------------------------------------------------------------------
// <auto-generated>
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
// </auto-generated>
// ----------------------------------------------------------------------------
using System;
using System.Runtime.InteropServices;
using System.Security;
using __CallingConvention = global::System.Runtime.InteropServices.CallingConvention;
using __IntPtr = global::System.IntPtr;

#pragma warning disable CS0109 // Member does not hide an inherited member; new keyword is not required

namespace PdfLibCore.Generated
{
    public enum FPDF_FILEIDTYPE
    {
        FILEIDTYPE_PERMANENT = 0,
        FILEIDTYPE_CHANGING = 1
    }

    public static unsafe partial class Pdfium
    {
        public partial struct __Internal
        {
            [SuppressUnmanagedCodeSecurity, DllImport("Pdfium", EntryPoint = "FPDFBookmark_GetFirstChild", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr FPDFBookmark_GetFirstChild(__IntPtr document, __IntPtr bookmark);

            [SuppressUnmanagedCodeSecurity, DllImport("Pdfium", EntryPoint = "FPDFBookmark_GetNextSibling", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr FPDFBookmark_GetNextSibling(__IntPtr document, __IntPtr bookmark);

            [SuppressUnmanagedCodeSecurity, DllImport("Pdfium", EntryPoint = "FPDFBookmark_GetTitle", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint FPDFBookmark_GetTitle(__IntPtr bookmark, __IntPtr buffer, uint buflen);

            [SuppressUnmanagedCodeSecurity, DllImport("Pdfium", EntryPoint = "FPDFBookmark_GetCount", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int FPDFBookmark_GetCount(__IntPtr bookmark);

            [SuppressUnmanagedCodeSecurity, DllImport("Pdfium", EntryPoint = "FPDFBookmark_Find", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr FPDFBookmark_Find(__IntPtr document, string title);

            [SuppressUnmanagedCodeSecurity, DllImport("Pdfium", EntryPoint = "FPDFBookmark_GetDest", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr FPDFBookmark_GetDest(__IntPtr document, __IntPtr bookmark);

            [SuppressUnmanagedCodeSecurity, DllImport("Pdfium", EntryPoint = "FPDFBookmark_GetAction", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr FPDFBookmark_GetAction(__IntPtr bookmark);

            [SuppressUnmanagedCodeSecurity, DllImport("Pdfium", EntryPoint = "FPDFAction_GetType", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint FPDFAction_GetType(__IntPtr action);

            [SuppressUnmanagedCodeSecurity, DllImport("Pdfium", EntryPoint = "FPDFAction_GetDest", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr FPDFAction_GetDest(__IntPtr document, __IntPtr action);

            [SuppressUnmanagedCodeSecurity, DllImport("Pdfium", EntryPoint = "FPDFAction_GetFilePath", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint FPDFAction_GetFilePath(__IntPtr action, __IntPtr buffer, uint buflen);

            [SuppressUnmanagedCodeSecurity, DllImport("Pdfium", EntryPoint = "FPDFAction_GetURIPath", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint FPDFAction_GetURIPath(__IntPtr document, __IntPtr action, __IntPtr buffer, uint buflen);

            [SuppressUnmanagedCodeSecurity, DllImport("Pdfium", EntryPoint = "FPDFDest_GetDestPageIndex", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int FPDFDest_GetDestPageIndex(__IntPtr document, __IntPtr dest);

            [SuppressUnmanagedCodeSecurity, DllImport("Pdfium", EntryPoint = "FPDFDest_GetView", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint FPDFDest_GetView(__IntPtr dest, uint* pNumParams, float* pParams);

            [SuppressUnmanagedCodeSecurity, DllImport("Pdfium", EntryPoint = "FPDFDest_GetLocationInPage", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern global::PdfLibCore.Types.FPDF_BOOL FPDFDest_GetLocationInPage(__IntPtr dest, global::PdfLibCore.Types.FPDF_BOOL* hasXVal, global::PdfLibCore.Types.FPDF_BOOL* hasYVal, global::PdfLibCore.Types.FPDF_BOOL* hasZoomVal, float* x, float* y, float* zoom);

            [SuppressUnmanagedCodeSecurity, DllImport("Pdfium", EntryPoint = "FPDFLink_GetLinkAtPoint", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr FPDFLink_GetLinkAtPoint(__IntPtr page, double x, double y);

            [SuppressUnmanagedCodeSecurity, DllImport("Pdfium", EntryPoint = "FPDFLink_GetLinkZOrderAtPoint", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int FPDFLink_GetLinkZOrderAtPoint(__IntPtr page, double x, double y);

            [SuppressUnmanagedCodeSecurity, DllImport("Pdfium", EntryPoint = "FPDFLink_GetDest", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr FPDFLink_GetDest(__IntPtr document, __IntPtr link);

            [SuppressUnmanagedCodeSecurity, DllImport("Pdfium", EntryPoint = "FPDFLink_GetAction", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr FPDFLink_GetAction(__IntPtr link);

            [SuppressUnmanagedCodeSecurity, DllImport("Pdfium", EntryPoint = "FPDFLink_Enumerate", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern global::PdfLibCore.Types.FPDF_BOOL FPDFLink_Enumerate(__IntPtr page, int* start_pos, __IntPtr link_annot);

            [SuppressUnmanagedCodeSecurity, DllImport("Pdfium", EntryPoint = "FPDFLink_GetAnnot", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr FPDFLink_GetAnnot(__IntPtr page, __IntPtr link_annot);

            [SuppressUnmanagedCodeSecurity, DllImport("Pdfium", EntryPoint = "FPDFLink_GetAnnotRect", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern global::PdfLibCore.Types.FPDF_BOOL FPDFLink_GetAnnotRect(__IntPtr link_annot, __IntPtr rect);

            [SuppressUnmanagedCodeSecurity, DllImport("Pdfium", EntryPoint = "FPDFLink_CountQuadPoints", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int FPDFLink_CountQuadPoints(__IntPtr link_annot);

            [SuppressUnmanagedCodeSecurity, DllImport("Pdfium", EntryPoint = "FPDFLink_GetQuadPoints", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern global::PdfLibCore.Types.FPDF_BOOL FPDFLink_GetQuadPoints(__IntPtr link_annot, int quad_index, __IntPtr quad_points);

            [SuppressUnmanagedCodeSecurity, DllImport("Pdfium", EntryPoint = "FPDF_GetPageAAction", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr FPDF_GetPageAAction(__IntPtr page, int aa_type);

            [SuppressUnmanagedCodeSecurity, DllImport("Pdfium", EntryPoint = "FPDF_GetFileIdentifier", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint FPDF_GetFileIdentifier(__IntPtr document, global::PdfLibCore.Generated.FPDF_FILEIDTYPE id_type, __IntPtr buffer, uint buflen);

            [SuppressUnmanagedCodeSecurity, DllImport("Pdfium", EntryPoint = "FPDF_GetMetaText", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint FPDF_GetMetaText(__IntPtr document, string tag, __IntPtr buffer, uint buflen);

            [SuppressUnmanagedCodeSecurity, DllImport("Pdfium", EntryPoint = "FPDF_GetPageLabel", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint FPDF_GetPageLabel(__IntPtr document, int page_index, __IntPtr buffer, uint buflen);
        }


        public static global::PdfLibCore.Generated.FPDF_Bookmark FPDFBookmark_GetFirstChild(global::PdfLibCore.Generated.FPDF_Document document, global::PdfLibCore.Generated.FPDF_Bookmark bookmark)
        {
            var __arg0 = document is null ? __IntPtr.Zero : document.__Instance;
            var __arg1 = bookmark is null ? __IntPtr.Zero : bookmark.__Instance;
            var ___ret = __Internal.FPDFBookmark_GetFirstChild(__arg0, __arg1);
            var __result0 = global::PdfLibCore.Generated.FPDF_Bookmark.__CreateInstance(___ret, false);
            return __result0;
        }


        public static global::PdfLibCore.Generated.FPDF_Bookmark FPDFBookmark_GetNextSibling(global::PdfLibCore.Generated.FPDF_Document document, global::PdfLibCore.Generated.FPDF_Bookmark bookmark)
        {
            var __arg0 = document is null ? __IntPtr.Zero : document.__Instance;
            var __arg1 = bookmark is null ? __IntPtr.Zero : bookmark.__Instance;
            var ___ret = __Internal.FPDFBookmark_GetNextSibling(__arg0, __arg1);
            var __result0 = global::PdfLibCore.Generated.FPDF_Bookmark.__CreateInstance(___ret, false);
            return __result0;
        }


        public static uint FPDFBookmark_GetTitle(global::PdfLibCore.Generated.FPDF_Bookmark bookmark, __IntPtr buffer, uint buflen)
        {
            var __arg0 = bookmark is null ? __IntPtr.Zero : bookmark.__Instance;
            var ___ret = __Internal.FPDFBookmark_GetTitle(__arg0, buffer, buflen);
            return ___ret;
        }


        public static int FPDFBookmark_GetCount(global::PdfLibCore.Generated.FPDF_Bookmark bookmark)
        {
            var __arg0 = bookmark is null ? __IntPtr.Zero : bookmark.__Instance;
            var ___ret = __Internal.FPDFBookmark_GetCount(__arg0);
            return ___ret;
        }


        public static global::PdfLibCore.Generated.FPDF_Bookmark FPDFBookmark_Find(global::PdfLibCore.Generated.FPDF_Document document, ref string title)
        {
            var __arg0 = document is null ? __IntPtr.Zero : document.__Instance;
            var ___ret = __Internal.FPDFBookmark_Find(__arg0, title);
            var __result0 = global::PdfLibCore.Generated.FPDF_Bookmark.__CreateInstance(___ret, false);
            return __result0;
        }


        public static global::PdfLibCore.Generated.FPDF_Dest FPDFBookmark_GetDest(global::PdfLibCore.Generated.FPDF_Document document, global::PdfLibCore.Generated.FPDF_Bookmark bookmark)
        {
            var __arg0 = document is null ? __IntPtr.Zero : document.__Instance;
            var __arg1 = bookmark is null ? __IntPtr.Zero : bookmark.__Instance;
            var ___ret = __Internal.FPDFBookmark_GetDest(__arg0, __arg1);
            var __result0 = global::PdfLibCore.Generated.FPDF_Dest.__CreateInstance(___ret, false);
            return __result0;
        }


        public static global::PdfLibCore.Generated.FPDF_Action FPDFBookmark_GetAction(global::PdfLibCore.Generated.FPDF_Bookmark bookmark)
        {
            var __arg0 = bookmark is null ? __IntPtr.Zero : bookmark.__Instance;
            var ___ret = __Internal.FPDFBookmark_GetAction(__arg0);
            var __result0 = global::PdfLibCore.Generated.FPDF_Action.__CreateInstance(___ret, false);
            return __result0;
        }


        public static uint FPDFAction_GetType(global::PdfLibCore.Generated.FPDF_Action action)
        {
            var __arg0 = action is null ? __IntPtr.Zero : action.__Instance;
            var ___ret = __Internal.FPDFAction_GetType(__arg0);
            return ___ret;
        }


        public static global::PdfLibCore.Generated.FPDF_Dest FPDFAction_GetDest(global::PdfLibCore.Generated.FPDF_Document document, global::PdfLibCore.Generated.FPDF_Action action)
        {
            var __arg0 = document is null ? __IntPtr.Zero : document.__Instance;
            var __arg1 = action is null ? __IntPtr.Zero : action.__Instance;
            var ___ret = __Internal.FPDFAction_GetDest(__arg0, __arg1);
            var __result0 = global::PdfLibCore.Generated.FPDF_Dest.__CreateInstance(___ret, false);
            return __result0;
        }


        public static uint FPDFAction_GetFilePath(global::PdfLibCore.Generated.FPDF_Action action, __IntPtr buffer, uint buflen)
        {
            var __arg0 = action is null ? __IntPtr.Zero : action.__Instance;
            var ___ret = __Internal.FPDFAction_GetFilePath(__arg0, buffer, buflen);
            return ___ret;
        }


        public static uint FPDFAction_GetURIPath(global::PdfLibCore.Generated.FPDF_Document document, global::PdfLibCore.Generated.FPDF_Action action, __IntPtr buffer, uint buflen)
        {
            var __arg0 = document is null ? __IntPtr.Zero : document.__Instance;
            var __arg1 = action is null ? __IntPtr.Zero : action.__Instance;
            var ___ret = __Internal.FPDFAction_GetURIPath(__arg0, __arg1, buffer, buflen);
            return ___ret;
        }


        public static int FPDFDest_GetDestPageIndex(global::PdfLibCore.Generated.FPDF_Document document, global::PdfLibCore.Generated.FPDF_Dest dest)
        {
            var __arg0 = document is null ? __IntPtr.Zero : document.__Instance;
            var __arg1 = dest is null ? __IntPtr.Zero : dest.__Instance;
            var ___ret = __Internal.FPDFDest_GetDestPageIndex(__arg0, __arg1);
            return ___ret;
        }


        public static uint FPDFDest_GetView(global::PdfLibCore.Generated.FPDF_Dest dest, ref uint pNumParams, ref float pParams)
        {
            var __arg0 = dest is null ? __IntPtr.Zero : dest.__Instance;
            fixed (uint* __pNumParams1 = &pNumParams)
            {
                var __arg1 = __pNumParams1;
                fixed (float* __pParams2 = &pParams)
                {
                    var __arg2 = __pParams2;
                    var ___ret = __Internal.FPDFDest_GetView(__arg0, __arg1, __arg2);
                    return ___ret;
                }
            }
        }


        public static global::PdfLibCore.Types.FPDF_BOOL FPDFDest_GetLocationInPage(global::PdfLibCore.Generated.FPDF_Dest dest, ref global::PdfLibCore.Types.FPDF_BOOL hasXVal, ref global::PdfLibCore.Types.FPDF_BOOL hasYVal, ref global::PdfLibCore.Types.FPDF_BOOL hasZoomVal, ref float x, ref float y, ref float zoom)
        {
            var __arg0 = dest is null ? __IntPtr.Zero : dest.__Instance;
            fixed (global::PdfLibCore.Types.FPDF_BOOL* __hasXVal1 = &hasXVal)
            {
                var __arg1 = __hasXVal1;
                fixed (global::PdfLibCore.Types.FPDF_BOOL* __hasYVal2 = &hasYVal)
                {
                    var __arg2 = __hasYVal2;
                    fixed (global::PdfLibCore.Types.FPDF_BOOL* __hasZoomVal3 = &hasZoomVal)
                    {
                        var __arg3 = __hasZoomVal3;
                        fixed (float* __x4 = &x)
                        {
                            var __arg4 = __x4;
                            fixed (float* __y5 = &y)
                            {
                                var __arg5 = __y5;
                                fixed (float* __zoom6 = &zoom)
                                {
                                    var __arg6 = __zoom6;
                                    var ___ret = __Internal.FPDFDest_GetLocationInPage(__arg0, __arg1, __arg2, __arg3, __arg4, __arg5, __arg6);
                                    return ___ret;
                                }
                            }
                        }
                    }
                }
            }
        }


        public static global::PdfLibCore.Generated.FPDF_Link FPDFLink_GetLinkAtPoint(global::PdfLibCore.Generated.FPDF_Page page, double x, double y)
        {
            var __arg0 = page is null ? __IntPtr.Zero : page.__Instance;
            var ___ret = __Internal.FPDFLink_GetLinkAtPoint(__arg0, x, y);
            var __result0 = global::PdfLibCore.Generated.FPDF_Link.__CreateInstance(___ret, false);
            return __result0;
        }


        public static int FPDFLink_GetLinkZOrderAtPoint(global::PdfLibCore.Generated.FPDF_Page page, double x, double y)
        {
            var __arg0 = page is null ? __IntPtr.Zero : page.__Instance;
            var ___ret = __Internal.FPDFLink_GetLinkZOrderAtPoint(__arg0, x, y);
            return ___ret;
        }


        public static global::PdfLibCore.Generated.FPDF_Dest FPDFLink_GetDest(global::PdfLibCore.Generated.FPDF_Document document, global::PdfLibCore.Generated.FPDF_Link link)
        {
            var __arg0 = document is null ? __IntPtr.Zero : document.__Instance;
            var __arg1 = link is null ? __IntPtr.Zero : link.__Instance;
            var ___ret = __Internal.FPDFLink_GetDest(__arg0, __arg1);
            var __result0 = global::PdfLibCore.Generated.FPDF_Dest.__CreateInstance(___ret, false);
            return __result0;
        }


        public static global::PdfLibCore.Generated.FPDF_Action FPDFLink_GetAction(global::PdfLibCore.Generated.FPDF_Link link)
        {
            var __arg0 = link is null ? __IntPtr.Zero : link.__Instance;
            var ___ret = __Internal.FPDFLink_GetAction(__arg0);
            var __result0 = global::PdfLibCore.Generated.FPDF_Action.__CreateInstance(___ret, false);
            return __result0;
        }


        public static global::PdfLibCore.Types.FPDF_BOOL FPDFLink_Enumerate(global::PdfLibCore.Generated.FPDF_Page page, ref int start_pos, global::PdfLibCore.Generated.FPDF_Link link_annot)
        {
            var __arg0 = page is null ? __IntPtr.Zero : page.__Instance;
            fixed (int* __start_pos1 = &start_pos)
            {
                var __arg1 = __start_pos1;
                var ____arg2 = link_annot is null ? __IntPtr.Zero : link_annot.__Instance;
                var __arg2 = new __IntPtr(&____arg2);
                var ___ret = __Internal.FPDFLink_Enumerate(__arg0, __arg1, __arg2);
                return ___ret;
            }
        }


        public static global::PdfLibCore.Generated.FPDF_Annotation FPDFLink_GetAnnot(global::PdfLibCore.Generated.FPDF_Page page, global::PdfLibCore.Generated.FPDF_Link link_annot)
        {
            var __arg0 = page is null ? __IntPtr.Zero : page.__Instance;
            var __arg1 = link_annot is null ? __IntPtr.Zero : link_annot.__Instance;
            var ___ret = __Internal.FPDFLink_GetAnnot(__arg0, __arg1);
            var __result0 = global::PdfLibCore.Generated.FPDF_Annotation.__CreateInstance(___ret, false);
            return __result0;
        }


        public static global::PdfLibCore.Types.FPDF_BOOL FPDFLink_GetAnnotRect(global::PdfLibCore.Generated.FPDF_Link link_annot, global::PdfLibCore.Generated.FS_RECTF_ rect)
        {
            var __arg0 = link_annot is null ? __IntPtr.Zero : link_annot.__Instance;
            var __arg1 = rect is null ? __IntPtr.Zero : rect.__Instance;
            var ___ret = __Internal.FPDFLink_GetAnnotRect(__arg0, __arg1);
            return ___ret;
        }


        public static int FPDFLink_CountQuadPoints(global::PdfLibCore.Generated.FPDF_Link link_annot)
        {
            var __arg0 = link_annot is null ? __IntPtr.Zero : link_annot.__Instance;
            var ___ret = __Internal.FPDFLink_CountQuadPoints(__arg0);
            return ___ret;
        }


        public static global::PdfLibCore.Types.FPDF_BOOL FPDFLink_GetQuadPoints(global::PdfLibCore.Generated.FPDF_Link link_annot, int quad_index, global::PdfLibCore.Generated.FS_QUADPOINTSF quad_points)
        {
            var __arg0 = link_annot is null ? __IntPtr.Zero : link_annot.__Instance;
            var __arg2 = quad_points is null ? __IntPtr.Zero : quad_points.__Instance;
            var ___ret = __Internal.FPDFLink_GetQuadPoints(__arg0, quad_index, __arg2);
            return ___ret;
        }


        public static global::PdfLibCore.Generated.FPDF_Action FPDF_GetPageAAction(global::PdfLibCore.Generated.FPDF_Page page, int aa_type)
        {
            var __arg0 = page is null ? __IntPtr.Zero : page.__Instance;
            var ___ret = __Internal.FPDF_GetPageAAction(__arg0, aa_type);
            var __result0 = global::PdfLibCore.Generated.FPDF_Action.__CreateInstance(___ret, false);
            return __result0;
        }


        public static uint FPDF_GetFileIdentifier(global::PdfLibCore.Generated.FPDF_Document document, global::PdfLibCore.Generated.FPDF_FILEIDTYPE id_type, __IntPtr buffer, uint buflen)
        {
            var __arg0 = document is null ? __IntPtr.Zero : document.__Instance;
            var ___ret = __Internal.FPDF_GetFileIdentifier(__arg0, id_type, buffer, buflen);
            return ___ret;
        }


        public static uint FPDF_GetMetaText(global::PdfLibCore.Generated.FPDF_Document document, string tag, __IntPtr buffer, uint buflen)
        {
            var __arg0 = document is null ? __IntPtr.Zero : document.__Instance;
            var ___ret = __Internal.FPDF_GetMetaText(__arg0, tag, buffer, buflen);
            return ___ret;
        }


        public static uint FPDF_GetPageLabel(global::PdfLibCore.Generated.FPDF_Document document, int page_index, __IntPtr buffer, uint buflen)
        {
            var __arg0 = document is null ? __IntPtr.Zero : document.__Instance;
            var ___ret = __Internal.FPDF_GetPageLabel(__arg0, page_index, buffer, buflen);
            return ___ret;
        }
    }
}
